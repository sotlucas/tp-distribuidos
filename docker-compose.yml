version: "3"
name: tp1

services:
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    networks:
      - testing_net
    ports:
      - "5672:5672"
      - "15672:15672"

  client:
    container_name: client
    image: client:latest
    entrypoint: python3 /main.py archivo.csv
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
    depends_on:
      - server
    restart: on-failure
    networks:
      - testing_net
    volumes:
      - ./client/config.ini:/config.ini
      - ./temp/archivo.csv:/archivo.csv
  
  server:
    container_name: server
    image: server:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - INPUT_QUEUE=vuelos_tres_escala_o_mas_sink
      - OUTPUT_QUEUE=vuelos
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=QUEUE
      - OUTPUT_TYPE=QUEUE
    depends_on:
      - rabbitmq
    restart: on-failure
    networks:
      - testing_net
    volumes:
      - ./server/config.ini:/config.ini

  filter_general:
    deploy:
      replicas: ${FILTER_GENERAL_REPLICAS}
    image: filter:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - DELIMITER=,
      - INPUT_FIELDS=,legId,searchDate,flightDate,startingAirport,destinationAirport,fareBasisCode,travelDuration,elapsedDays,isBasicEconomy,isRefundable,isNonStop,baseFare,totalFare,seatsRemaining,totalTravelDistance,segmentsDepartureTimeEpochSeconds,segmentsDepartureTimeRaw,segmentsArrivalTimeEpochSeconds,segmentsArrivalTimeRaw,segmentsArrivalAirportCode,segmentsDepartureAirportCode,segmentsAirlineName,segmentsAirlineCode,segmentsEquipmentDescription,segmentsDurationInSeconds,segmentsDistance,segmentsCabinCode
      - OUTPUT_FIELDS=legId,startingAirport,destinationAirport,totalFare,totalTravelDistance,travelDuration,segmentsArrivalAirportCode
      - INPUT_QUEUE=vuelos
      - OUTPUT_QUEUE=vuelos_filtered
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=QUEUE
      - OUTPUT_TYPE=PUBSUB
    depends_on:
      - rabbitmq
    restart: on-failure
    networks:
      - testing_net

  filter_avg_max:
    deploy:
      replicas: ${FILTER_AVG_MAX_REPLICAS}
    image: filter:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - DELIMITER=,
      - INPUT_FIELDS=legId,startingAirport,destinationAirport,totalFare,totalTravelDistance,travelDuration,segmentsArrivalAirportCode
      - OUTPUT_FIELDS=startingAirport,destinationAirport,totalFare
      - INPUT_QUEUE=vuelos_filtered
      - OUTPUT_QUEUE=vuelos_avg_max
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=PUBSUB
      - OUTPUT_TYPE=QUEUE
    depends_on:
      - rabbitmq
    restart: on-failure
    networks:
      - testing_net

  filter_multiple:
    deploy:
      replicas: ${FILTER_MULTIPLE_REPLICAS}
    image: filter:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - DELIMITER=,
      - INPUT_FIELDS=legId,startingAirport,destinationAirport,totalFare,totalTravelDistance,travelDuration,segmentsArrivalAirportCode
      - OUTPUT_FIELDS=legId,startingAirport,destinationAirport,totalFare,travelDuration,segmentsArrivalAirportCode
      - INPUT_QUEUE=vuelos_filtered
      - OUTPUT_QUEUE=vuelos_multiple
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=PUBSUB
      - OUTPUT_TYPE=QUEUE
    depends_on:
      - rabbitmq
    restart: on-failure
    networks:
      - testing_net

  filter_distancia:
    deploy:
      replicas: ${FILTER_DISTANCIA_REPLICAS}
    image: filter:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - DELIMITER=,
      - INPUT_FIELDS=legId,startingAirport,destinationAirport,totalFare,totalTravelDistance,travelDuration,segmentsArrivalAirportCode
      - OUTPUT_FIELDS=legId,startingAirport,destinationAirport,totalTravelDistance
      - INPUT_QUEUE=vuelos_filtered
      - OUTPUT_QUEUE=vuelos_distancia
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=PUBSUB
      - OUTPUT_TYPE=QUEUE
    depends_on:
      - rabbitmq
    restart: on-failure
    networks:
      - testing_net

  processor_tres_escalas_o_mas:
    deploy:
      replicas: ${PROCESSOR_TRES_ESCALAS_O_MAS_REPLICAS}
    image: tres_escalas_o_mas:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - INPUT_QUEUE=vuelos_multiple
      - OUTPUT_QUEUE=vuelos_tres_escalas_o_mas
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=QUEUE
      - OUTPUT_TYPE=PUBSUB
    depends_on:
      - rabbitmq
    restart: on-failure
    networks:
      - testing_net

  filter_tres_escalas_o_mas:
    deploy:
      replicas: ${FILTER_TRES_ESCALAS_O_MAS_REPLICAS}
    image: filter:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - DELIMITER=,
      - INPUT_FIELDS=legId,startingAirport,destinationAirport,totalFare,travelDuration,segmentsArrivalAirportCode
      - OUTPUT_FIELDS=legId,startingAirport,destinationAirport,totalFare,segmentsArrivalAirportCode
      - INPUT_QUEUE=vuelos_tres_escalas_o_mas
      - OUTPUT_QUEUE=vuelos_tres_escalas_o_mas_sink
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=PUBSUB
      - OUTPUT_TYPE=QUEUE
    depends_on:
      - rabbitmq
    restart: on-failure
    networks:
      - testing_net

  filter_dos_mas_rapidos:
    deploy:
      replicas: ${FILTER_DOS_MAS_RAPIDOS_REPLICAS}
    image: filter:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONPATH="${PYTHONPATH}:commons/"
      - LOGGING_LEVEL=DEBUG
      - INPUT_FIELDS=legId,startingAirport,destinationAirport,totalFare,travelDuration,segmentsArrivalAirportCode
      - OUTPUT_FIELDS=legId,startingAirport,destinationAirport,travelDuration,segmentsArrivalAirportCode
      - INPUT_QUEUE=vuelos_tres_escalas_o_mas
      - OUTPUT_QUEUE=vuelos_dos_mas_rapidos_sink
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=PUBSUB
      - OUTPUT_TYPE=QUEUE
    depends_on:
      - rabbitmq
    restart: on-failure
    networks:
      - testing_net

  lat_long_uploader:
    deploy:
      replicas: ${LAT_LONG_UPLOADER_REPLICAS}
    image: lat_long_uploader:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - OUTPUT_QUEUE=lat&long
      - RABBIT_HOST=rabbitmq
      - OUTPUT_TYPE=QUEUE
    depends_on:
      - rabbitmq
    restart: on-failure
    networks:
      - testing_net

  filter_lat_long:
    deploy:
      replicas: ${FILTER_LAT_LONG_REPLICAS}
    image: filter:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - DELIMITER=;
      - INPUT_FIELDS=AirportCode,AirportName,CityName,CountryName,CountryCode,Latitude,Longitude,WorldAreaCode,CityNamegeo_name_id,CountryNamegeo_name_id,coordinates
      - OUTPUT_FIELDS=AirportCode,Latitude,Longitude
      - INPUT_QUEUE=lat&long
      - OUTPUT_QUEUE=lat&long_filtered
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=QUEUE
      - OUTPUT_TYPE=QUEUE
    depends_on:
      - rabbitmq
    restart: on-failure
    networks:
      - testing_net

networks:
  testing_net:
    ipam:
      driver: default
      config:
        - subnet: 172.25.125.0/24
