version: "3.4"
name: tp1

services:
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 50s
    networks:
      - testing_net
    ports:
      - "5672:5672"
      - "15672:15672"

  client_1:
    image: client:latest
    entrypoint: python3 /main.py archivo.csv airports-codepublic.csv
    environment:
      - REPLICA_ID=1
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
    depends_on:
      - server
    networks:
      - testing_net
    volumes:
      - ./client/config.ini:/config.ini
      - ./data/archivo.csv:/archivo.csv
      - ./data/airports-codepublic.csv:/airports-codepublic.csv
      - ./results:/results

  client_2:
    image: client:latest
    entrypoint: python3 /main.py archivo.csv airports-codepublic.csv
    environment:
      - REPLICA_ID=2
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
    depends_on:
      - server
    networks:
      - testing_net
    volumes:
      - ./client/config.ini:/config.ini
      - ./data/archivo.csv:/archivo.csv
      - ./data/airports-codepublic.csv:/airports-codepublic.csv
      - ./results:/results

  server:
    container_name: server
    image: server:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - VUELOS_INPUT=vuelos_resultados_listener
      - VUELOS_OUTPUT=vuelos
      - LAT_LONG_OUTPUT=lat&long
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=EXCHANGE
      - OUTPUT_TYPE=QUEUE
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - testing_net
    volumes:
      - ./server/config.ini:/config.ini

  filter_general_1:
    image: filter:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - DELIMITER=,
      - INPUT_FIELDS=legId,searchDate,flightDate,startingAirport,destinationAirport,fareBasisCode,travelDuration,elapsedDays,isBasicEconomy,isRefundable,isNonStop,baseFare,totalFare,seatsRemaining,totalTravelDistance,segmentsDepartureTimeEpochSeconds,segmentsDepartureTimeRaw,segmentsArrivalTimeEpochSeconds,segmentsArrivalTimeRaw,segmentsArrivalAirportCode,segmentsDepartureAirportCode,segmentsAirlineName,segmentsAirlineCode,segmentsEquipmentDescription,segmentsDurationInSeconds,segmentsDistance,segmentsCabinCode
      - OUTPUT_FIELDS=legId,startingAirport,destinationAirport,totalFare,totalTravelDistance,travelDuration,segmentsArrivalAirportCode
      - INPUT=vuelos
      - OUTPUT=vuelos_filtered
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=QUEUE
      - OUTPUT_TYPE=EXCHANGE
      - REPLICAS_COUNT=${FILTER_GENERAL_REPLICAS}
      - REPLICA_ID=1
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - testing_net

  filter_general_2:
    image: filter:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - DELIMITER=,
      - INPUT_FIELDS=legId,searchDate,flightDate,startingAirport,destinationAirport,fareBasisCode,travelDuration,elapsedDays,isBasicEconomy,isRefundable,isNonStop,baseFare,totalFare,seatsRemaining,totalTravelDistance,segmentsDepartureTimeEpochSeconds,segmentsDepartureTimeRaw,segmentsArrivalTimeEpochSeconds,segmentsArrivalTimeRaw,segmentsArrivalAirportCode,segmentsDepartureAirportCode,segmentsAirlineName,segmentsAirlineCode,segmentsEquipmentDescription,segmentsDurationInSeconds,segmentsDistance,segmentsCabinCode
      - OUTPUT_FIELDS=legId,startingAirport,destinationAirport,totalFare,totalTravelDistance,travelDuration,segmentsArrivalAirportCode
      - INPUT=vuelos
      - OUTPUT=vuelos_filtered
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=QUEUE
      - OUTPUT_TYPE=EXCHANGE
      - REPLICAS_COUNT=${FILTER_GENERAL_REPLICAS}
      - REPLICA_ID=2
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - testing_net

  filter_general_3:
    image: filter:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - DELIMITER=,
      - INPUT_FIELDS=legId,searchDate,flightDate,startingAirport,destinationAirport,fareBasisCode,travelDuration,elapsedDays,isBasicEconomy,isRefundable,isNonStop,baseFare,totalFare,seatsRemaining,totalTravelDistance,segmentsDepartureTimeEpochSeconds,segmentsDepartureTimeRaw,segmentsArrivalTimeEpochSeconds,segmentsArrivalTimeRaw,segmentsArrivalAirportCode,segmentsDepartureAirportCode,segmentsAirlineName,segmentsAirlineCode,segmentsEquipmentDescription,segmentsDurationInSeconds,segmentsDistance,segmentsCabinCode
      - OUTPUT_FIELDS=legId,startingAirport,destinationAirport,totalFare,totalTravelDistance,travelDuration,segmentsArrivalAirportCode
      - INPUT=vuelos
      - OUTPUT=vuelos_filtered
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=QUEUE
      - OUTPUT_TYPE=EXCHANGE
      - REPLICAS_COUNT=${FILTER_GENERAL_REPLICAS}
      - REPLICA_ID=3
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - testing_net

  filter_general_4:
    image: filter:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - DELIMITER=,
      - INPUT_FIELDS=legId,searchDate,flightDate,startingAirport,destinationAirport,fareBasisCode,travelDuration,elapsedDays,isBasicEconomy,isRefundable,isNonStop,baseFare,totalFare,seatsRemaining,totalTravelDistance,segmentsDepartureTimeEpochSeconds,segmentsDepartureTimeRaw,segmentsArrivalTimeEpochSeconds,segmentsArrivalTimeRaw,segmentsArrivalAirportCode,segmentsDepartureAirportCode,segmentsAirlineName,segmentsAirlineCode,segmentsEquipmentDescription,segmentsDurationInSeconds,segmentsDistance,segmentsCabinCode
      - OUTPUT_FIELDS=legId,startingAirport,destinationAirport,totalFare,totalTravelDistance,travelDuration,segmentsArrivalAirportCode
      - INPUT=vuelos
      - OUTPUT=vuelos_filtered
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=QUEUE
      - OUTPUT_TYPE=EXCHANGE
      - REPLICAS_COUNT=${FILTER_GENERAL_REPLICAS}
      - REPLICA_ID=4
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - testing_net

  filter_general_5:
    image: filter:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - DELIMITER=,
      - INPUT_FIELDS=legId,searchDate,flightDate,startingAirport,destinationAirport,fareBasisCode,travelDuration,elapsedDays,isBasicEconomy,isRefundable,isNonStop,baseFare,totalFare,seatsRemaining,totalTravelDistance,segmentsDepartureTimeEpochSeconds,segmentsDepartureTimeRaw,segmentsArrivalTimeEpochSeconds,segmentsArrivalTimeRaw,segmentsArrivalAirportCode,segmentsDepartureAirportCode,segmentsAirlineName,segmentsAirlineCode,segmentsEquipmentDescription,segmentsDurationInSeconds,segmentsDistance,segmentsCabinCode
      - OUTPUT_FIELDS=legId,startingAirport,destinationAirport,totalFare,totalTravelDistance,travelDuration,segmentsArrivalAirportCode
      - INPUT=vuelos
      - OUTPUT=vuelos_filtered
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=QUEUE
      - OUTPUT_TYPE=EXCHANGE
      - REPLICAS_COUNT=${FILTER_GENERAL_REPLICAS}
      - REPLICA_ID=5
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - testing_net

  filter_avg_max_1:
    image: filter:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - DELIMITER=,
      - INPUT_FIELDS=legId,startingAirport,destinationAirport,totalFare,totalTravelDistance,travelDuration,segmentsArrivalAirportCode
      - OUTPUT_FIELDS=startingAirport,destinationAirport,totalFare
      - INPUT=vuelos_filtered
      - OUTPUT=vuelos_avg_max
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=EXCHANGE
      - OUTPUT_TYPE=QUEUE
      - REPLICAS_COUNT=${FILTER_AVG_MAX_REPLICAS}
      - REPLICA_ID=1
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - testing_net

  filter_avg_max_2:
    image: filter:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - DELIMITER=,
      - INPUT_FIELDS=legId,startingAirport,destinationAirport,totalFare,totalTravelDistance,travelDuration,segmentsArrivalAirportCode
      - OUTPUT_FIELDS=startingAirport,destinationAirport,totalFare
      - INPUT=vuelos_filtered
      - OUTPUT=vuelos_avg_max
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=EXCHANGE
      - OUTPUT_TYPE=QUEUE
      - REPLICAS_COUNT=${FILTER_AVG_MAX_REPLICAS}
      - REPLICA_ID=2
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - testing_net

  filter_avg_max_3:
    image: filter:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - DELIMITER=,
      - INPUT_FIELDS=legId,startingAirport,destinationAirport,totalFare,totalTravelDistance,travelDuration,segmentsArrivalAirportCode
      - OUTPUT_FIELDS=startingAirport,destinationAirport,totalFare
      - INPUT=vuelos_filtered
      - OUTPUT=vuelos_avg_max
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=EXCHANGE
      - OUTPUT_TYPE=QUEUE
      - REPLICAS_COUNT=${FILTER_AVG_MAX_REPLICAS}
      - REPLICA_ID=3
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - testing_net

  filter_multiple_1:
    image: filter:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - DELIMITER=,
      - INPUT_FIELDS=legId,startingAirport,destinationAirport,totalFare,totalTravelDistance,travelDuration,segmentsArrivalAirportCode
      - OUTPUT_FIELDS=legId,startingAirport,destinationAirport,totalFare,travelDuration,segmentsArrivalAirportCode
      - INPUT=vuelos_filtered
      - OUTPUT=vuelos_multiple
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=EXCHANGE
      - OUTPUT_TYPE=QUEUE
      - REPLICAS_COUNT=${FILTER_MULTIPLE_REPLICAS}
      - REPLICA_ID=1
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - testing_net

  filter_multiple_2:
    image: filter:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - DELIMITER=,
      - INPUT_FIELDS=legId,startingAirport,destinationAirport,totalFare,totalTravelDistance,travelDuration,segmentsArrivalAirportCode
      - OUTPUT_FIELDS=legId,startingAirport,destinationAirport,totalFare,travelDuration,segmentsArrivalAirportCode
      - INPUT=vuelos_filtered
      - OUTPUT=vuelos_multiple
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=EXCHANGE
      - OUTPUT_TYPE=QUEUE
      - REPLICAS_COUNT=${FILTER_MULTIPLE_REPLICAS}
      - REPLICA_ID=2
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - testing_net

  filter_multiple_3:
    image: filter:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - DELIMITER=,
      - INPUT_FIELDS=legId,startingAirport,destinationAirport,totalFare,totalTravelDistance,travelDuration,segmentsArrivalAirportCode
      - OUTPUT_FIELDS=legId,startingAirport,destinationAirport,totalFare,travelDuration,segmentsArrivalAirportCode
      - INPUT=vuelos_filtered
      - OUTPUT=vuelos_multiple
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=EXCHANGE
      - OUTPUT_TYPE=QUEUE
      - REPLICAS_COUNT=${FILTER_MULTIPLE_REPLICAS}
      - REPLICA_ID=3
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - testing_net
  
  filter_multiple_4:
    image: filter:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - DELIMITER=,
      - INPUT_FIELDS=legId,startingAirport,destinationAirport,totalFare,totalTravelDistance,travelDuration,segmentsArrivalAirportCode
      - OUTPUT_FIELDS=legId,startingAirport,destinationAirport,totalFare,travelDuration,segmentsArrivalAirportCode
      - INPUT=vuelos_filtered
      - OUTPUT=vuelos_multiple
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=EXCHANGE
      - OUTPUT_TYPE=QUEUE
      - REPLICAS_COUNT=${FILTER_MULTIPLE_REPLICAS}
      - REPLICA_ID=4
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - testing_net

  filter_distancia_1:
    image: filter:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - DELIMITER=,
      - INPUT_FIELDS=legId,startingAirport,destinationAirport,totalFare,totalTravelDistance,travelDuration,segmentsArrivalAirportCode
      - OUTPUT_FIELDS=legId,startingAirport,destinationAirport,totalTravelDistance
      - INPUT=vuelos_filtered
      - OUTPUT=vuelos_distancia
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=EXCHANGE
      - OUTPUT_TYPE=QUEUE
      - REPLICAS_COUNT=${FILTER_DISTANCIA_REPLICAS}
      - REPLICA_ID=1
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - testing_net

  filter_distancia_2:
    image: filter:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - DELIMITER=,
      - INPUT_FIELDS=legId,startingAirport,destinationAirport,totalFare,totalTravelDistance,travelDuration,segmentsArrivalAirportCode
      - OUTPUT_FIELDS=legId,startingAirport,destinationAirport,totalTravelDistance
      - INPUT=vuelos_filtered
      - OUTPUT=vuelos_distancia
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=EXCHANGE
      - OUTPUT_TYPE=QUEUE
      - REPLICAS_COUNT=${FILTER_DISTANCIA_REPLICAS}
      - REPLICA_ID=2
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - testing_net

  filter_distancia_3:
    image: filter:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - DELIMITER=,
      - INPUT_FIELDS=legId,startingAirport,destinationAirport,totalFare,totalTravelDistance,travelDuration,segmentsArrivalAirportCode
      - OUTPUT_FIELDS=legId,startingAirport,destinationAirport,totalTravelDistance
      - INPUT=vuelos_filtered
      - OUTPUT=vuelos_distancia
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=EXCHANGE
      - OUTPUT_TYPE=QUEUE
      - REPLICAS_COUNT=${FILTER_DISTANCIA_REPLICAS}
      - REPLICA_ID=3
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - testing_net

  filter_distancia_4:
    image: filter:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - DELIMITER=,
      - INPUT_FIELDS=legId,startingAirport,destinationAirport,totalFare,totalTravelDistance,travelDuration,segmentsArrivalAirportCode
      - OUTPUT_FIELDS=legId,startingAirport,destinationAirport,totalTravelDistance
      - INPUT=vuelos_filtered
      - OUTPUT=vuelos_distancia
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=EXCHANGE
      - OUTPUT_TYPE=QUEUE
      - REPLICAS_COUNT=${FILTER_DISTANCIA_REPLICAS}
      - REPLICA_ID=4
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - testing_net


  processor_tres_escalas_o_mas_1:
    image: tres_escalas_o_mas:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - INPUT=vuelos_multiple
      - OUTPUT=vuelos_tres_escalas_o_mas
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=QUEUE
      - OUTPUT_TYPE=EXCHANGE
      - REPLICAS_COUNT=${PROCESSOR_TRES_ESCALAS_O_MAS_REPLICAS}
      - REPLICA_ID=1
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - testing_net

  processor_tres_escalas_o_mas_2:
    image: tres_escalas_o_mas:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - INPUT=vuelos_multiple
      - OUTPUT=vuelos_tres_escalas_o_mas
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=QUEUE
      - OUTPUT_TYPE=EXCHANGE
      - REPLICAS_COUNT=${PROCESSOR_TRES_ESCALAS_O_MAS_REPLICAS}
      - REPLICA_ID=2
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - testing_net

  processor_tres_escalas_o_mas_3:
    image: tres_escalas_o_mas:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - INPUT=vuelos_multiple
      - OUTPUT=vuelos_tres_escalas_o_mas
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=QUEUE
      - OUTPUT_TYPE=EXCHANGE
      - REPLICAS_COUNT=${PROCESSOR_TRES_ESCALAS_O_MAS_REPLICAS}
      - REPLICA_ID=3
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - testing_net

  filter_tres_escalas_o_mas_1:
    image: filter:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - DELIMITER=,
      - INPUT_FIELDS=legId,startingAirport,destinationAirport,totalFare,travelDuration,segmentsArrivalAirportCode
      - OUTPUT_FIELDS=legId,startingAirport,destinationAirport,totalFare,segmentsArrivalAirportCode
      - INPUT=vuelos_tres_escalas_o_mas
      - OUTPUT=vuelos_tres_escalas_o_mas_sink
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=EXCHANGE
      - OUTPUT_TYPE=QUEUE
      - REPLICAS_COUNT=${FILTER_TRES_ESCALAS_O_MAS_REPLICAS}
      - REPLICA_ID=1
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - testing_net

  filter_dos_mas_rapidos_1:
    image: filter:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - DELIMITER=,
      - INPUT_FIELDS=legId,startingAirport,destinationAirport,totalFare,travelDuration,segmentsArrivalAirportCode
      - OUTPUT_FIELDS=legId,startingAirport,destinationAirport,travelDuration,segmentsArrivalAirportCode
      - INPUT=vuelos_tres_escalas_o_mas
      - OUTPUT=vuelos_dos_mas_rapidos
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=EXCHANGE
      - OUTPUT_TYPE=QUEUE
      - REPLICAS_COUNT=${FILTER_DOS_MAS_RAPIDOS_REPLICAS}
      - REPLICA_ID=1
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - testing_net

  processor_dos_mas_rapidos_1:
    image: dos_mas_rapidos:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - INPUT=vuelos_dos_mas_rapidos
      - OUTPUT=vuelos_dos_mas_rapidos_sink
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=QUEUE
      - OUTPUT_TYPE=QUEUE
      - REPLICAS_COUNT=${PROCESSOR_DOS_MAS_RAPIDOS_REPLICAS}
      - REPLICA_ID=1
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - testing_net

  filter_lat_long_1:
    image: filter:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - DELIMITER=;
      - INPUT_FIELDS=AirportCode,AirportName,CityName,CountryName,CountryCode,Latitude,Longitude,WorldAreaCode,CityNamegeo_name_id,CountryNamegeo_name_id,coordinates
      - OUTPUT_FIELDS=AirportCode,Latitude,Longitude
      - INPUT=lat&long
      - OUTPUT=lat&long_filtered
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=QUEUE
      - OUTPUT_TYPE=EXCHANGE
      - REPLICAS_COUNT=${FILTER_LAT_LONG_REPLICAS}
      - REPLICA_ID=1
    depends_on:
      rabbitmq:
        condition: service_healthy
      joiner_1:
        condition: service_started
      joiner_2:
        condition: service_started
      joiner_3:
        condition: service_started
      joiner_4:
        condition: service_started
      joiner_5:
        condition: service_started
    networks:
      - testing_net

  joiner_1:
    image: joiner:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - VUELOS_INPUT=vuelos_distancia
      - LAT_LONG_INPUT=lat&long_filtered
      - OUTPUT=vuelos_distancia_joined
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE_LAT_LONG=EXCHANGE
      - INPUT_TYPE_VUELOS=QUEUE
      - OUTPUT_TYPE=QUEUE
      - REPLICAS_COUNT=${JOINER_REPLICAS}
      - REPLICA_ID=1
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - testing_net

  joiner_2:
    image: joiner:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - VUELOS_INPUT=vuelos_distancia
      - LAT_LONG_INPUT=lat&long_filtered
      - OUTPUT=vuelos_distancia_joined
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE_LAT_LONG=EXCHANGE
      - INPUT_TYPE_VUELOS=QUEUE
      - OUTPUT_TYPE=QUEUE
      - REPLICAS_COUNT=${JOINER_REPLICAS}
      - REPLICA_ID=2
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - testing_net

  joiner_3:
    image: joiner:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - VUELOS_INPUT=vuelos_distancia
      - LAT_LONG_INPUT=lat&long_filtered
      - OUTPUT=vuelos_distancia_joined
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE_LAT_LONG=EXCHANGE
      - INPUT_TYPE_VUELOS=QUEUE
      - OUTPUT_TYPE=QUEUE
      - REPLICAS_COUNT=${JOINER_REPLICAS}
      - REPLICA_ID=3
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - testing_net

  joiner_4:
    image: joiner:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - VUELOS_INPUT=vuelos_distancia
      - LAT_LONG_INPUT=lat&long_filtered
      - OUTPUT=vuelos_distancia_joined
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE_LAT_LONG=EXCHANGE
      - INPUT_TYPE_VUELOS=QUEUE
      - OUTPUT_TYPE=QUEUE
      - REPLICAS_COUNT=${JOINER_REPLICAS}
      - REPLICA_ID=4
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - testing_net

  joiner_5:
    image: joiner:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - VUELOS_INPUT=vuelos_distancia
      - LAT_LONG_INPUT=lat&long_filtered
      - OUTPUT=vuelos_distancia_joined
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE_LAT_LONG=EXCHANGE
      - INPUT_TYPE_VUELOS=QUEUE
      - OUTPUT_TYPE=QUEUE
      - REPLICAS_COUNT=${JOINER_REPLICAS}
      - REPLICA_ID=5
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - testing_net

  processor_distancias_1:
    image: distancias:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - INPUT=vuelos_distancia_joined
      - OUTPUT=vuelos_distancias_sink
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=QUEUE
      - OUTPUT_TYPE=QUEUE
      - REPLICAS_COUNT=${PROCESSOR_DISTANCIAS_REPLICAS}
      - REPLICA_ID=1
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - testing_net

  grouper_1:
    image: grouper:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - VUELOS_INPUT=vuelos_avg_max_balanced
      - VUELOS_OUTPUT=vuelos_max_avg_filtered
      - MEDIA_GENERAL_INPUT=media_general_sink
      - MEDIA_GENERAL_OUTPUT=media_general
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=EXCHANGE
      - OUTPUT_TYPE=QUEUE
      - REPLICAS_COUNT=${GROUPER_REPLICAS}
      - REPLICA_ID=1
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - testing_net

  grouper_2:
    image: grouper:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - VUELOS_INPUT=vuelos_avg_max_balanced
      - VUELOS_OUTPUT=vuelos_max_avg_filtered
      - MEDIA_GENERAL_INPUT=media_general_sink
      - MEDIA_GENERAL_OUTPUT=media_general
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=EXCHANGE
      - OUTPUT_TYPE=QUEUE
      - REPLICAS_COUNT=${GROUPER_REPLICAS}
      - REPLICA_ID=2
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - testing_net

  grouper_3:
    image: grouper:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - VUELOS_INPUT=vuelos_avg_max_balanced
      - VUELOS_OUTPUT=vuelos_max_avg_filtered
      - MEDIA_GENERAL_INPUT=media_general_sink
      - MEDIA_GENERAL_OUTPUT=media_general
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=EXCHANGE
      - OUTPUT_TYPE=QUEUE
      - REPLICAS_COUNT=${GROUPER_REPLICAS}
      - REPLICA_ID=3
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - testing_net

  load_balancer_1:
    image: load_balancer:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - INPUT=vuelos_avg_max
      - OUTPUT=vuelos_avg_max_balanced
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=QUEUE
      - OUTPUT_TYPE=EXCHANGE
      - REPLICAS_COUNT=${LOAD_BALANCER_REPLICAS}
      - GROUPER_REPLICAS_COUNT=${GROUPER_REPLICAS}
      - REPLICA_ID=1
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - testing_net

  load_balancer_2:
    image: load_balancer:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - INPUT=vuelos_avg_max
      - OUTPUT=vuelos_avg_max_balanced
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=QUEUE
      - OUTPUT_TYPE=EXCHANGE
      - REPLICAS_COUNT=${LOAD_BALANCER_REPLICAS}
      - GROUPER_REPLICAS_COUNT=${GROUPER_REPLICAS}
      - REPLICA_ID=2
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - testing_net

  load_balancer_3:
    image: load_balancer:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - INPUT=vuelos_avg_max
      - OUTPUT=vuelos_avg_max_balanced
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=QUEUE
      - OUTPUT_TYPE=EXCHANGE
      - REPLICAS_COUNT=${LOAD_BALANCER_REPLICAS}
      - GROUPER_REPLICAS_COUNT=${GROUPER_REPLICAS}
      - REPLICA_ID=3
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - testing_net

  processor_media_general_1:
    image: media_general:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - INPUT=media_general
      - OUTPUT=media_general_sink
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=QUEUE
      - OUTPUT_TYPE=EXCHANGE
      - GROUPER_REPLICAS_COUNT=${GROUPER_REPLICAS}
      - REPLICAS_COUNT=${PROCESSOR_MEDIA_GENERAL_REPLICAS}
      - REPLICA_ID=1
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - testing_net

  processor_max_avg_1:
    image: max_avg:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - INPUT=vuelos_max_avg_filtered
      - OUTPUT=vuelos_max_avg_sink
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=QUEUE
      - OUTPUT_TYPE=QUEUE
      - REPLICAS_COUNT=${PROCESSOR_MAX_AVG_REPLICAS}
      - REPLICA_ID=1
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - testing_net

  tagger_dos_mas_rapidos_1:
    image: tagger:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - INPUT=vuelos_dos_mas_rapidos_sink
      - OUTPUT=vuelos_resultados
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=QUEUE
      - OUTPUT_TYPE=QUEUE
      - REPLICAS_COUNT=${TAGGER_DOS_MAS_RAPIDOS_REPLICAS}
      - TAG_NAME=DOS_MAS_RAPIDOS
      - REPLICA_ID=1
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - testing_net

  tagger_tres_escalas_o_mas_1:
    image: tagger:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - INPUT=vuelos_tres_escalas_o_mas_sink
      - OUTPUT=vuelos_resultados
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=QUEUE
      - OUTPUT_TYPE=QUEUE
      - REPLICAS_COUNT=${TAGGER_TRES_ESCALAS_O_MAS_REPLICAS}
      - TAG_NAME=TRES_ESCALAS
      - REPLICA_ID=1
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - testing_net

  tagger_distancias_1:
    image: tagger:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - INPUT=vuelos_distancias_sink
      - OUTPUT=vuelos_resultados
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=QUEUE
      - OUTPUT_TYPE=QUEUE
      - REPLICAS_COUNT=${TAGGER_DISTANCIAS_REPLICAS}
      - TAG_NAME=DISTANCIAS
      - REPLICA_ID=1
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - testing_net

  tagger_max_avg_1:
    image: tagger:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - INPUT=vuelos_max_avg_sink
      - OUTPUT=vuelos_resultados
      - RABBIT_HOST=rabbitmq
      - INPUT_TYPE=QUEUE
      - OUTPUT_TYPE=QUEUE
      - REPLICAS_COUNT=${TAGGER_MAX_AVG_REPLICAS}
      - TAG_NAME=MAX_AVG
      - REPLICA_ID=1
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - testing_net

  health_checker:
    image: health_checker:latest
    entrypoint: python3 /main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - FILTER_GENERAL_REPLICAS=${FILTER_GENERAL_REPLICAS}
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - testing_net

networks:
  testing_net:
    ipam:
      driver: default
      config:
        - subnet: 172.25.125.0/24